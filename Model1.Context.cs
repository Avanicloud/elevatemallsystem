//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Elevate_Mall_System
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Database1Entities : DbContext
    {
        public Database1Entities()
            : base("name=Database1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bill> Bills { get; set; }
        public virtual DbSet<Cabinet> Cabinets { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Item_Admin> Item_Admin { get; set; }
        public virtual DbSet<Item_generation> Item_generation { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Rack> Racks { get; set; }
        public virtual DbSet<Registration_Customer> Registration_Customer { get; set; }
        public virtual DbSet<Registration_Mall> Registration_Mall { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<Shipment> Shipments { get; set; }
        public virtual DbSet<shop> shops { get; set; }
        public virtual DbSet<Subcategory> Subcategories { get; set; }
        public virtual DbSet<Scheme> Schemes { get; set; }
    
        public virtual int Delete_Bill(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Bill", idParameter);
        }
    
        public virtual int Delete_Cabinet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Cabinet", idParameter);
        }
    
        public virtual int Delete_Category(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Category", idParameter);
        }
    
        public virtual int Delete_Item(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Item", idParameter);
        }
    
        public virtual int Delete_Item_Admin(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Item_Admin", idParameter);
        }
    
        public virtual int Delete_Itemgen(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Itemgen", idParameter);
        }
    
        public virtual int Delete_Rack(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Rack", idParameter);
        }
    
        public virtual int Delete_RegCustomer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_RegCustomer", idParameter);
        }
    
        public virtual int Delete_RegMall(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_RegMall", idParameter);
        }
    
        public virtual int Delete_Room(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Room", idParameter);
        }
    
        public virtual int Delete_Scheme(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Scheme", idParameter);
        }
    
        public virtual int Delete_Shipment(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Shipment", idParameter);
        }
    
        public virtual int Delete_Shop(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Shop", idParameter);
        }
    
        public virtual int Delete_Subcat(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Subcat", idParameter);
        }
    
        public virtual int Insert_Bill(Nullable<int> customer_id, Nullable<int> item_id, string date, string amount, string payment_gateway)
        {
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("Customer_id", customer_id) :
                new ObjectParameter("Customer_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("Item_id", item_id) :
                new ObjectParameter("Item_id", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var payment_gatewayParameter = payment_gateway != null ?
                new ObjectParameter("Payment_gateway", payment_gateway) :
                new ObjectParameter("Payment_gateway", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Bill", customer_idParameter, item_idParameter, dateParameter, amountParameter, payment_gatewayParameter);
        }
    
        public virtual int Insert_Cabinet(Nullable<int> room_id, string description)
        {
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("Room_id", room_id) :
                new ObjectParameter("Room_id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Cabinet", room_idParameter, descriptionParameter);
        }
    
        public virtual int Insert_Category(Nullable<int> shop_Id, string categoryName)
        {
            var shop_IdParameter = shop_Id.HasValue ?
                new ObjectParameter("Shop_Id", shop_Id) :
                new ObjectParameter("Shop_Id", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Category", shop_IdParameter, categoryNameParameter);
        }
    
        public virtual int Insert_Item(Nullable<int> shop_Id, Nullable<int> mall_Id, Nullable<int> category_id, string description, Nullable<double> price, string itemname, string photo, string size, string colour, Nullable<int> room_Id, Nullable<int> rack_Id, Nullable<int> cabinet_Id)
        {
            var shop_IdParameter = shop_Id.HasValue ?
                new ObjectParameter("Shop_Id", shop_Id) :
                new ObjectParameter("Shop_Id", typeof(int));
    
            var mall_IdParameter = mall_Id.HasValue ?
                new ObjectParameter("Mall_Id", mall_Id) :
                new ObjectParameter("Mall_Id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("Category_id", category_id) :
                new ObjectParameter("Category_id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var itemnameParameter = itemname != null ?
                new ObjectParameter("Itemname", itemname) :
                new ObjectParameter("Itemname", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var colourParameter = colour != null ?
                new ObjectParameter("Colour", colour) :
                new ObjectParameter("Colour", typeof(string));
    
            var room_IdParameter = room_Id.HasValue ?
                new ObjectParameter("Room_Id", room_Id) :
                new ObjectParameter("Room_Id", typeof(int));
    
            var rack_IdParameter = rack_Id.HasValue ?
                new ObjectParameter("Rack_Id", rack_Id) :
                new ObjectParameter("Rack_Id", typeof(int));
    
            var cabinet_IdParameter = cabinet_Id.HasValue ?
                new ObjectParameter("Cabinet_Id", cabinet_Id) :
                new ObjectParameter("Cabinet_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Item", shop_IdParameter, mall_IdParameter, category_idParameter, descriptionParameter, priceParameter, itemnameParameter, photoParameter, sizeParameter, colourParameter, room_IdParameter, rack_IdParameter, cabinet_IdParameter);
        }
    
        public virtual int Insert_Item_Admin(string item_Name, string category, string subcategory)
        {
            var item_NameParameter = item_Name != null ?
                new ObjectParameter("Item_Name", item_Name) :
                new ObjectParameter("Item_Name", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subcategoryParameter = subcategory != null ?
                new ObjectParameter("Subcategory", subcategory) :
                new ObjectParameter("Subcategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Item_Admin", item_NameParameter, categoryParameter, subcategoryParameter);
        }
    
        public virtual int Insert_Itemgen(Nullable<int> bill_id, Nullable<int> item_id, string price, string description)
        {
            var bill_idParameter = bill_id.HasValue ?
                new ObjectParameter("Bill_id", bill_id) :
                new ObjectParameter("Bill_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("Item_id", item_id) :
                new ObjectParameter("Item_id", typeof(int));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Itemgen", bill_idParameter, item_idParameter, priceParameter, descriptionParameter);
        }
    
        public virtual int insert_Rack(Nullable<int> room_id, Nullable<int> cabinet_id)
        {
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("Room_id", room_id) :
                new ObjectParameter("Room_id", typeof(int));
    
            var cabinet_idParameter = cabinet_id.HasValue ?
                new ObjectParameter("Cabinet_id", cabinet_id) :
                new ObjectParameter("Cabinet_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_Rack", room_idParameter, cabinet_idParameter);
        }
    
        public virtual int Insert_RegCustomer(string name, string address, string city, string state, string email, string phone_no, string user_id, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("Phone_no", phone_no) :
                new ObjectParameter("Phone_no", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_RegCustomer", nameParameter, addressParameter, cityParameter, stateParameter, emailParameter, phone_noParameter, user_idParameter, passwordParameter);
        }
    
        public virtual int Insert_RegMall(string name, string address, string city, string state, string email, string phone_no, string user_id, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("Phone_no", phone_no) :
                new ObjectParameter("Phone_no", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_RegMall", nameParameter, addressParameter, cityParameter, stateParameter, emailParameter, phone_noParameter, user_idParameter, passwordParameter);
        }
    
        public virtual int Insert_Room(string level)
        {
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Room", levelParameter);
        }
    
        public virtual int Insert_Scheme(Nullable<int> mall_id, Nullable<int> item_id, string discount, string schemes, string timeValidation, string termsandCondition)
        {
            var mall_idParameter = mall_id.HasValue ?
                new ObjectParameter("Mall_id", mall_id) :
                new ObjectParameter("Mall_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("Item_id", item_id) :
                new ObjectParameter("Item_id", typeof(int));
    
            var discountParameter = discount != null ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(string));
    
            var schemesParameter = schemes != null ?
                new ObjectParameter("Schemes", schemes) :
                new ObjectParameter("Schemes", typeof(string));
    
            var timeValidationParameter = timeValidation != null ?
                new ObjectParameter("TimeValidation", timeValidation) :
                new ObjectParameter("TimeValidation", typeof(string));
    
            var termsandConditionParameter = termsandCondition != null ?
                new ObjectParameter("TermsandCondition", termsandCondition) :
                new ObjectParameter("TermsandCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Scheme", mall_idParameter, item_idParameter, discountParameter, schemesParameter, timeValidationParameter, termsandConditionParameter);
        }
    
        public virtual int Insert_Shipment(Nullable<int> bill_id, Nullable<int> customer_id, string address, string city, string state, string pincode)
        {
            var bill_idParameter = bill_id.HasValue ?
                new ObjectParameter("Bill_id", bill_id) :
                new ObjectParameter("Bill_id", typeof(int));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("Customer_id", customer_id) :
                new ObjectParameter("Customer_id", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Shipment", bill_idParameter, customer_idParameter, addressParameter, cityParameter, stateParameter, pincodeParameter);
        }
    
        public virtual int Insert_Shop(Nullable<int> mall_id, Nullable<int> category_id, Nullable<int> subcategory_id, Nullable<int> item_id, string description, string discounts)
        {
            var mall_idParameter = mall_id.HasValue ?
                new ObjectParameter("Mall_id", mall_id) :
                new ObjectParameter("Mall_id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("Category_id", category_id) :
                new ObjectParameter("Category_id", typeof(int));
    
            var subcategory_idParameter = subcategory_id.HasValue ?
                new ObjectParameter("Subcategory_id", subcategory_id) :
                new ObjectParameter("Subcategory_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("Item_id", item_id) :
                new ObjectParameter("Item_id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var discountsParameter = discounts != null ?
                new ObjectParameter("Discounts", discounts) :
                new ObjectParameter("Discounts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Shop", mall_idParameter, category_idParameter, subcategory_idParameter, item_idParameter, descriptionParameter, discountsParameter);
        }
    
        public virtual int Insert_Subcat(string name, Nullable<int> category_id, Nullable<int> shop_id, string description)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("Category_id", category_id) :
                new ObjectParameter("Category_id", typeof(int));
    
            var shop_idParameter = shop_id.HasValue ?
                new ObjectParameter("shop_id", shop_id) :
                new ObjectParameter("shop_id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Subcat", nameParameter, category_idParameter, shop_idParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Procedure_Result> Procedure(Nullable<int> param1, Nullable<int> param2)
        {
            var param1Parameter = param1.HasValue ?
                new ObjectParameter("param1", param1) :
                new ObjectParameter("param1", typeof(int));
    
            var param2Parameter = param2.HasValue ?
                new ObjectParameter("param2", param2) :
                new ObjectParameter("param2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Procedure_Result>("Procedure", param1Parameter, param2Parameter);
        }
    
        public virtual ObjectResult<Select_Bill_Result> Select_Bill(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Bill_Result>("Select_Bill", idParameter);
        }
    
        public virtual ObjectResult<Select_Cabinet_Result> Select_Cabinet(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Cabinet_Result>("Select_Cabinet", idParameter);
        }
    
        public virtual ObjectResult<Select_Category_Result> Select_Category(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Category_Result>("Select_Category", idParameter);
        }
    
        public virtual ObjectResult<Select_Item_Result> Select_Item(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Item_Result>("Select_Item", idParameter);
        }
    
        public virtual ObjectResult<Select_Item_Admin_Result> Select_Item_Admin(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Item_Admin_Result>("Select_Item_Admin", idParameter);
        }
    
        public virtual ObjectResult<Select_Itemgen_Result> Select_Itemgen(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Itemgen_Result>("Select_Itemgen", idParameter);
        }
    
        public virtual ObjectResult<Select_Rack_Result> Select_Rack(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Rack_Result>("Select_Rack", idParameter);
        }
    
        public virtual ObjectResult<Select_RegCustomer_Result> Select_RegCustomer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_RegCustomer_Result>("Select_RegCustomer", idParameter);
        }
    
        public virtual ObjectResult<Select_Room_Result> Select_Room(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Room_Result>("Select_Room", idParameter);
        }
    
        public virtual ObjectResult<Select_Scheme_Result> Select_Scheme(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Scheme_Result>("Select_Scheme", idParameter);
        }
    
        public virtual ObjectResult<Select_Shipment_Result> Select_Shipment(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Shipment_Result>("Select_Shipment", idParameter);
        }
    
        public virtual ObjectResult<Select_Shop_Result> Select_Shop(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Shop_Result>("Select_Shop", idParameter);
        }
    
        public virtual ObjectResult<Select_Subcat_Result> Select_Subcat(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Subcat_Result>("Select_Subcat", idParameter);
        }
    
        public virtual ObjectResult<Selecte_REgMall_Result> Selecte_REgMall(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Selecte_REgMall_Result>("Selecte_REgMall", idParameter);
        }
    
        public virtual int Update_Bill(Nullable<int> id, Nullable<int> customer_id, Nullable<int> item_id, string date, string amount, string payment_gateway)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("Customer_id", customer_id) :
                new ObjectParameter("Customer_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("Item_id", item_id) :
                new ObjectParameter("Item_id", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var payment_gatewayParameter = payment_gateway != null ?
                new ObjectParameter("Payment_gateway", payment_gateway) :
                new ObjectParameter("Payment_gateway", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Bill", idParameter, customer_idParameter, item_idParameter, dateParameter, amountParameter, payment_gatewayParameter);
        }
    
        public virtual int Update_Cabinet(Nullable<int> id, Nullable<int> room_id, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("Room_id", room_id) :
                new ObjectParameter("Room_id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Cabinet", idParameter, room_idParameter, descriptionParameter);
        }
    
        public virtual int Update_Category(Nullable<int> id, Nullable<int> shop_Id, string categoryName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var shop_IdParameter = shop_Id.HasValue ?
                new ObjectParameter("Shop_Id", shop_Id) :
                new ObjectParameter("Shop_Id", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Category", idParameter, shop_IdParameter, categoryNameParameter);
        }
    
        public virtual int Update_Item(Nullable<int> id, Nullable<int> shop_Id, Nullable<int> mall_Id, Nullable<int> category_id, string description, Nullable<double> price, string itemName, string photo, string size, string colour, Nullable<int> room_Id, Nullable<int> rack_Id, Nullable<int> cabinet_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var shop_IdParameter = shop_Id.HasValue ?
                new ObjectParameter("Shop_Id", shop_Id) :
                new ObjectParameter("Shop_Id", typeof(int));
    
            var mall_IdParameter = mall_Id.HasValue ?
                new ObjectParameter("Mall_Id", mall_Id) :
                new ObjectParameter("Mall_Id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("Category_id", category_id) :
                new ObjectParameter("Category_id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var colourParameter = colour != null ?
                new ObjectParameter("Colour", colour) :
                new ObjectParameter("Colour", typeof(string));
    
            var room_IdParameter = room_Id.HasValue ?
                new ObjectParameter("Room_Id", room_Id) :
                new ObjectParameter("Room_Id", typeof(int));
    
            var rack_IdParameter = rack_Id.HasValue ?
                new ObjectParameter("Rack_Id", rack_Id) :
                new ObjectParameter("Rack_Id", typeof(int));
    
            var cabinet_IdParameter = cabinet_Id.HasValue ?
                new ObjectParameter("Cabinet_Id", cabinet_Id) :
                new ObjectParameter("Cabinet_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Item", idParameter, shop_IdParameter, mall_IdParameter, category_idParameter, descriptionParameter, priceParameter, itemNameParameter, photoParameter, sizeParameter, colourParameter, room_IdParameter, rack_IdParameter, cabinet_IdParameter);
        }
    
        public virtual int Update_Item_Admin(Nullable<int> id, string item_Name, string category, string subcategory)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var item_NameParameter = item_Name != null ?
                new ObjectParameter("Item_Name", item_Name) :
                new ObjectParameter("Item_Name", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            var subcategoryParameter = subcategory != null ?
                new ObjectParameter("Subcategory", subcategory) :
                new ObjectParameter("Subcategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Item_Admin", idParameter, item_NameParameter, categoryParameter, subcategoryParameter);
        }
    
        public virtual int Update_Itemgen(Nullable<int> id, Nullable<int> bill_id, Nullable<int> item_id, string price, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var bill_idParameter = bill_id.HasValue ?
                new ObjectParameter("Bill_id", bill_id) :
                new ObjectParameter("Bill_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("Item_id", item_id) :
                new ObjectParameter("Item_id", typeof(int));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Itemgen", idParameter, bill_idParameter, item_idParameter, priceParameter, descriptionParameter);
        }
    
        public virtual int update_Rack(Nullable<int> id, Nullable<int> room_id, Nullable<int> cabinet_int)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("Room_id", room_id) :
                new ObjectParameter("Room_id", typeof(int));
    
            var cabinet_intParameter = cabinet_int.HasValue ?
                new ObjectParameter("Cabinet_int", cabinet_int) :
                new ObjectParameter("Cabinet_int", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_Rack", idParameter, room_idParameter, cabinet_intParameter);
        }
    
        public virtual int update_RegCustomer(Nullable<int> id, string name, string address, string city, string state, string email, string phone_no, string user_id, string password)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("Phone_no", phone_no) :
                new ObjectParameter("Phone_no", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_RegCustomer", idParameter, nameParameter, addressParameter, cityParameter, stateParameter, emailParameter, phone_noParameter, user_idParameter, passwordParameter);
        }
    
        public virtual int Update_RegMall(Nullable<int> id, string name, string address, string city, string state, string email, string phone_no, string user_id, string password)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("Phone_no", phone_no) :
                new ObjectParameter("Phone_no", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_RegMall", idParameter, nameParameter, addressParameter, cityParameter, stateParameter, emailParameter, phone_noParameter, user_idParameter, passwordParameter);
        }
    
        public virtual int Update_Room(Nullable<int> id, string level)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Room", idParameter, levelParameter);
        }
    
        public virtual int Update_Shipment(Nullable<int> id, Nullable<int> bill_id, Nullable<int> customer_id, string address, string city, string state, string pincode)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var bill_idParameter = bill_id.HasValue ?
                new ObjectParameter("Bill_id", bill_id) :
                new ObjectParameter("Bill_id", typeof(int));
    
            var customer_idParameter = customer_id.HasValue ?
                new ObjectParameter("Customer_id", customer_id) :
                new ObjectParameter("Customer_id", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Shipment", idParameter, bill_idParameter, customer_idParameter, addressParameter, cityParameter, stateParameter, pincodeParameter);
        }
    
        public virtual int Update_Shop(Nullable<int> id, Nullable<int> mall_id, Nullable<int> category_id, Nullable<int> subcategory_id, Nullable<int> item_id, string description, string discounts)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var mall_idParameter = mall_id.HasValue ?
                new ObjectParameter("Mall_id", mall_id) :
                new ObjectParameter("Mall_id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("Category_id", category_id) :
                new ObjectParameter("Category_id", typeof(int));
    
            var subcategory_idParameter = subcategory_id.HasValue ?
                new ObjectParameter("Subcategory_id", subcategory_id) :
                new ObjectParameter("Subcategory_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("Item_id", item_id) :
                new ObjectParameter("Item_id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var discountsParameter = discounts != null ?
                new ObjectParameter("Discounts", discounts) :
                new ObjectParameter("Discounts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Shop", idParameter, mall_idParameter, category_idParameter, subcategory_idParameter, item_idParameter, descriptionParameter, discountsParameter);
        }
    
        public virtual int Update_Subcat(Nullable<int> id, string name, Nullable<int> category_id, Nullable<int> shop_id, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("Category_id", category_id) :
                new ObjectParameter("Category_id", typeof(int));
    
            var shop_idParameter = shop_id.HasValue ?
                new ObjectParameter("shop_id", shop_id) :
                new ObjectParameter("shop_id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Subcat", idParameter, nameParameter, category_idParameter, shop_idParameter, descriptionParameter);
        }
    
        public virtual int Update_Scheme(Nullable<int> id, Nullable<int> mall_id, Nullable<int> item_id, string discount, string schemes, string timeValidation, string termsandCondition)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var mall_idParameter = mall_id.HasValue ?
                new ObjectParameter("Mall_id", mall_id) :
                new ObjectParameter("Mall_id", typeof(int));
    
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("Item_id", item_id) :
                new ObjectParameter("Item_id", typeof(int));
    
            var discountParameter = discount != null ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(string));
    
            var schemesParameter = schemes != null ?
                new ObjectParameter("Schemes", schemes) :
                new ObjectParameter("Schemes", typeof(string));
    
            var timeValidationParameter = timeValidation != null ?
                new ObjectParameter("TimeValidation", timeValidation) :
                new ObjectParameter("TimeValidation", typeof(string));
    
            var termsandConditionParameter = termsandCondition != null ?
                new ObjectParameter("TermsandCondition", termsandCondition) :
                new ObjectParameter("TermsandCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Scheme", idParameter, mall_idParameter, item_idParameter, discountParameter, schemesParameter, timeValidationParameter, termsandConditionParameter);
        }
    }
}
